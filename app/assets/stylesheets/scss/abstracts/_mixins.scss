// CSS Transition
// Usage: @include transition(width,0.3s,ease-out);
@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

// Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback
// Usage: @include font-size(1, large);
@mixin font-size( $decimal-size, $keyword: null ) {
  @if $keyword{ font-size: $keyword; }
  @else { font-size: $decimal-size * $base-font-multiplier * 16px;}
  font-size: $decimal-size * 1rem;
}

@mixin keyframes($keyframe-name) {
  @-webkit-keyframes #{$keyframe-name} { @content; }
  @-moz-keyframes #{$keyframe-name} { @content; }
  @-ms-keyframes #{$keyframe-name} { @content; }
  @keyframes #{$keyframe-name} { @content; }
}

// Mixin for animations
@mixin animation($animation-prop) {
  -webkit-animation: $animation-prop;
  -moz-animation: $animation-prop;
  -o-animation: $animation-prop;
  animation: $animation-prop;
}

// Quantity queries
@mixin quantity-query( $number, $comparison: 'equal' ) {
  $nth: '';
  @if index( ('greater' 'more' '>'), $comparison ) {
    $nth: 'n + #{$number}';
  } @else if index( ('less' 'fewer' '<'), $comparison ) {
    $nth: '-n + #{$number}';
  } @else if index( ('equal' 'same' '='), $comparison ) {
    $nth: $number;
  } @else {
    @warn "Sorry, that's an invalid $comparison value."
  }
  &:nth-last-child(#{$nth}):first-child {
    &, & ~ * {
      @content;
    }
  }
}
@mixin qq-equal( $number ) {
  @include quantity-query( $number, equal ) {
    @content;
  }
}
@mixin qq-greater( $number ) {
  @include quantity-query( $number, greater ) {
    @content;
  }
}
@mixin qq-less( $number ) {
  @include quantity-query( $number, less ) {
    @content;
  }
}
